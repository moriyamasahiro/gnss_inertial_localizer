#include "ekf.hpp"

void ekf::get_jaccobian_f(){
  Eigen::MatrixXf jaccobian_f(10, 16);
  float t = ekf::get_delta();

  Eigen::MatrixXf s = ekf::state.state;
  Eigen::MatrixXf u = ekf::imu_output;

  //Eigen::MatrixXf b = ekf::bias;

  jaccobian_f <<1, 0, 0, t, 0, 0, 0.5*pow(t,2) *(2*u(1,0)*s(9,0) - 2*u(2,0)*s(8,0)), 0.5*pow(t,2) *(2*u(1,0)*s(8,0) + 2*u(2,0)*s(9,0)), 0.5*pow(t,2) *(-4*u(0,0)*s(8,0) + 2*u(1,0)*s(7,0) - 2*u(2,0)*s(6,0)), 0.5*pow(t,2) *(-4*u(0,0)*s(9,0) + 2*u(1,0)*s(6,0) + 2*u(2,0)*s(7,0)), 0.5*pow(t,2) *(-2*pow(s(8,0),2)- 2*pow(s(9,0),2)+ 1), 0.5*pow(t,2) *(2*s(6,0)*s(9,0) + 2*s(7,0)*s(8,0)), 0.5*pow(t,2) *(-2*s(6,0)*s(8,0) + 2*s(7,0)*s(9,0)), 0, 0, 0, 
                0, 1, 0, 0, t, 0, 0.5*pow(t,2) *(-2*u(0,0)*s(9,0) + 2*u(2,0)*s(7,0)), 0.5*pow(t,2) *(2*u(0,0)*s(8,0) - 4*u(1,0)*s(7,0) + 2*u(2,0)*s(6,0)), 0.5*pow(t,2) *(2*u(0,0)*s(7,0) + 2*u(2,0)*s(9,0)), 0.5*pow(t,2) *(-2*u(0,0)*s(6,0) - 4*u(1,0)*s(9,0) + 2*u(2,0)*s(8,0)), 0.5*pow(t,2) *(-2*s(6,0)*s(9,0) + 2*s(7,0)*s(8,0)), 0.5*pow(t,2) *(-2*pow(s(7,0),2)- 2*pow(s(9,0),2)+ 1), 0.5*pow(t,2) *(2*s(6,0)*s(7,0) + 2*s(8,0)*s(9,0)), 0, 0, 0, 
                0, 0, 1, 0, 0, t, 0.5*pow(t,2) *(2*u(0,0)*s(8,0) - 2*u(1,0)*s(7,0)), 0.5*pow(t,2) *(2*u(0,0)*s(9,0) - 2*u(1,0)*s(6,0) - 4*u(2,0)*s(7,0)), 0.5*pow(t,2) *(2*u(0,0)*s(6,0) + 2*u(1,0)*s(9,0) - 4*u(2,0)*s(8,0)), 0.5*pow(t,2) *(2*u(0,0)*s(7,0) + 2*u(1,0)*s(8,0)), 0.5*pow(t,2) *(2*s(6,0)*s(8,0) + 2*s(7,0)*s(9,0)), 0.5*pow(t,2) *(-2*s(6,0)*s(7,0) + 2*s(8,0)*s(9,0)), 0.5*pow(t,2) *(-2*pow(s(7,0),2)- 2*pow(s(8,0),2)+ 1), 0, 0, 0, 
                0, 0, 0, 1, 0, 0, t*(2*u(1,0)*s(9,0) - 2*u(2,0)*s(8,0)), t*(2*u(1,0)*s(8,0) + 2*u(2,0)*s(9,0)), t*(-4*u(0,0)*s(8,0) + 2*u(1,0)*s(7,0) - 2*u(2,0)*s(6,0)), t*(-4*u(0,0)*s(9,0) + 2*u(1,0)*s(6,0) + 2*u(2,0)*s(7,0)), t*(-2*pow(s(8,0),2)- 2*pow(s(9,0),2)+ 1), t*(2*s(6,0)*s(9,0) + 2*s(7,0)*s(8,0)), t*(-2*s(6,0)*s(8,0) + 2*s(7,0)*s(9,0)), 0, 0, 0, 
                0, 0, 0, 0, 1, 0, t*(-2*u(0,0)*s(9,0) + 2*u(2,0)*s(7,0)), t*(2*u(0,0)*s(8,0) - 4*u(1,0)*s(7,0) + 2*u(2,0)*s(6,0)), t*(2*u(0,0)*s(7,0) + 2*u(2,0)*s(9,0)), t*(-2*u(0,0)*s(6,0) - 4*u(1,0)*s(9,0) + 2*u(2,0)*s(8,0)), t*(-2*s(6,0)*s(9,0) + 2*s(7,0)*s(8,0)), t*(-2*pow(s(7,0),2)- 2*pow(s(9,0),2)+ 1), t*(2*s(6,0)*s(7,0) + 2*s(8,0)*s(9,0)), 0, 0, 0, 
                0, 0, 0, 0, 0, 1, t*(2*u(0,0)*s(8,0) - 2*u(1,0)*s(7,0)), t*(2*u(0,0)*s(9,0) - 2*u(1,0)*s(6,0) - 4*u(2,0)*s(7,0)), t*(2*u(0,0)*s(6,0) + 2*u(1,0)*s(9,0) - 4*u(2,0)*s(8,0)), t*(2*u(0,0)*s(7,0) + 2*u(1,0)*s(8,0)), t*(2*s(6,0)*s(8,0) + 2*s(7,0)*s(9,0)), t*(-2*s(6,0)*s(7,0) + 2*s(8,0)*s(9,0)), t*(-2*pow(s(7,0),2)- 2*pow(s(8,0),2)+ 1), 0, 0, 0, 
                0, 0, 0, 0, 0, 0, 1, -u(3,0)*t, -u(4,0)*t, -u(5,0)*t, 0, 0, 0, -s(7,0)*t, -s(8,0)*t, -s(9,0)*t, 
                0, 0, 0, 0, 0, 0, u(3,0)*t, 1, -u(5,0)*t, u(4,0)*t, 0, 0, 0, s(6,0)*t, s(9,0)*t, -s(8,0)*t,
                0, 0, 0, 0, 0, 0, u(4,0)*t, u(5,0)*t, 1, -u(3,0)*t, 0, 0, 0, -s(9,0)*t, s(6,0)*t, s(7,0)*t,
                0, 0, 0, 0, 0, 0, u(5,0)*t, -u(4,0)*t, u(3,0)*t, 1, 0, 0, 0, s(8,0)*t, -s(7,0)*t, s(6,0)*t;


  ekf::jaccobian_f = jaccobian_f;
}
